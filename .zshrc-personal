###
#Home Dir Cleaning
compinit -d "$XDG_CACHE_HOME"/zsh/zcompdump-"$ZSH_VERSION" 
alias wget=wget --hsts-file="$XDG_DATA_HOME/wget-hsts"
# fix Backspace ssh problem for kitty terminal
[[ "$TERM" == "xterm-kitty" ]] && alias ssh="kitty +kitten ssh"
export EDITOR='lvim'
export VISUAL='lvim'

notflixpath='/home/christian/dev/python/web-scraping/media/'
alias notflix='${notflixpath}venv/bin/python3.10 ${notflixpath}notflix.py'
alias rm='rm -I --preserve-root'
alias v='lvim'
#----Media-----------------------------------------------------
alias i='run nsxiv -a' #autoplay gifs, disown shell session
alias icat='kitty +kitten icat'
alias p='run zathura' #disown shell session
alias speedread='tspreed'
#MPV
alias smpv='mpv "$(\ls | shuf | head -n 1)"'
alias fmpv='mpv "$(fzf)"'
#FFMPEG
alias video-info= 'ffprobe -hide_banner -stats -i'
#----Utilities-------------------------------------------------------
# tealdeer
alias fman='tldr'
# fuzzy finding & open in default application
alias fzf-open=' (fzf --height 40% --reverse </dev/tty) | (xargs -I {} xdg-open {} &)'
alias fzfo=' fzf | (xargs -I {} xdg-open {} &)'
# not recursive
alias fo=' find . -maxdepth 1 -type f | fzf | (xargs -I {} xdg-open {} &)'
alias la='exa --icons -a --group-directories-first'
alias ll='exa --icons -lah --group-directories-first'
alias ls='exa --icons --group-directories-first'
alias tree='exa --icons --tree'
alias less="bat --paging=always"
alias cat="bat --paging=never"
alias grep='rg'
alias m='man'
alias s='sudo'
alias cd1='cd ..'
alias cd2='cd ../..'
alias cd3='cd ../../..'
alias cd4='cd ../../../..'
alias cd5='cd ../../../../..'
alias c='clear'
# zoxide
alias cd='z'
alias zz='z -'
# trash-cli 
alias tra="trash"
alias trar="trash-restore"
# tmux
# new session based on directory
alias tn "tmux new -s (pwd | sed 's/.*\///g')"
alias pdftopng= 'pdftoppm -png'
alias du='dust'
alias df='duf'
# sane default commands
alias mkdir="mkdir -pv"
#                   ‚îÇ‚îî‚îÄ list created directories
#                   ‚îî‚îÄ create intermediate directories
alias mv="mv -iv"
#             ‚îÇ‚îî‚îÄ list moved files
#             ‚îî‚îÄ prompt before overwriting an existing file
alias cp="cp -iv"
#             ‚îÇ‚îî‚îÄ list copied files
#             ‚îî‚îÄ prompt before overwriting an existing file
#-----Git-----------------------------------------------------------
alias gts='git status'
alias gta='git add'
alias gtr='git reset'
alias gtc='git commit -m'
alias gtd='git diff'
alias gtp='git push -u origin HEAD'
alias gtl='git log'
alias gg='lazygit'
#-----Dev-Tools-----------------------------------------------------
alias f8='flake8'
alias sc='shellcheck'
alias code='rofi-code'
alias live='alive-server .'
alias sshpi='ssh pi@local.server'
#-----Tools---------------------------------------------------------
function myip { echo 'Your ip is:'; curl ipinfo.io/ip }
function run { "${@}" < /dev/null &> /dev/null &; disown } # independent from shell
alias mine='sudo chown -R $USER:$USER .'
alias window-wmchecker='xprop WM_CLASS WM_NAME'
#-----Python------------------------------------------------------
alias pyae='deactivate &> /dev/null; source ./venv/bin/activate'
alias pyde='deactivate'
alias pyenv='python3 -m venv ./venv; source ./venv/bin/activate'
#---------------------------------------------- chpwd pyvenv ---
python_venv() {
    MYVENV=./venv
    # when you cd into a folder that contains $MYVENV
    [[ -d $MYVENV ]] && source $MYVENV/bin/activate >/dev/null 2>&1
    # when you cd into a folder that doesn't
    [[ ! -d $MYVENV ]] && deactivate >/dev/null 2>&1
}
autoload -U add-zsh-hook
add-zsh-hook chpwd python_venv

python_venv
eval "$(zoxide init zsh)"

#----LF-File-Manager--------------------------------------------
#lf cd into current directory
bindkey -s '^o' 'lfcd\n'  # zsh keybinding: ctrl+o
lfcd () {
    tmp="$(mktemp)"
    lf -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        rm -f "$tmp"
        if [ -d "$dir" ]; then
            if [ "$dir" != "$(pwd)" ]; then
                cd "$dir"
            fi
        fi
    fi
}

#replace agnoster zsh prompt username@machine
prompt_context() {
   # Custom (Random emoji)
  emojis=("‚ö°Ô∏è" "üî•" "üí°" "üîë" "üåô")
  RAND_EMOJI_N=$(( $RANDOM % ${#emojis[@]} + 1))
  prompt_segment black default "${emojis[$RAND_EMOJI_N]} "
}
bunnyfetch
